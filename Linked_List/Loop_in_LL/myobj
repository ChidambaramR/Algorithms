
loop_in_ll:     file format elf64-x86-64


Disassembly of section .init:

00000000004004e8 <_init>:
  4004e8:	48 83 ec 08          	sub    $0x8,%rsp
  4004ec:	48 8b 05 05 0b 20 00 	mov    0x200b05(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4004f3:	48 85 c0             	test   %rax,%rax
  4004f6:	74 05                	je     4004fd <_init+0x15>
  4004f8:	e8 63 00 00 00       	callq  400560 <__gmon_start__@plt>
  4004fd:	48 83 c4 08          	add    $0x8,%rsp
  400501:	c3                   	retq   

Disassembly of section .plt:

0000000000400510 <putchar@plt-0x10>:
  400510:	ff 35 f2 0a 20 00    	pushq  0x200af2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400516:	ff 25 f4 0a 20 00    	jmpq   *0x200af4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40051c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400520 <putchar@plt>:
  400520:	ff 25 f2 0a 20 00    	jmpq   *0x200af2(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400526:	68 00 00 00 00       	pushq  $0x0
  40052b:	e9 e0 ff ff ff       	jmpq   400510 <_init+0x28>

0000000000400530 <puts@plt>:
  400530:	ff 25 ea 0a 20 00    	jmpq   *0x200aea(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400536:	68 01 00 00 00       	pushq  $0x1
  40053b:	e9 d0 ff ff ff       	jmpq   400510 <_init+0x28>

0000000000400540 <printf@plt>:
  400540:	ff 25 e2 0a 20 00    	jmpq   *0x200ae2(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400546:	68 02 00 00 00       	pushq  $0x2
  40054b:	e9 c0 ff ff ff       	jmpq   400510 <_init+0x28>

0000000000400550 <__libc_start_main@plt>:
  400550:	ff 25 da 0a 20 00    	jmpq   *0x200ada(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400556:	68 03 00 00 00       	pushq  $0x3
  40055b:	e9 b0 ff ff ff       	jmpq   400510 <_init+0x28>

0000000000400560 <__gmon_start__@plt>:
  400560:	ff 25 d2 0a 20 00    	jmpq   *0x200ad2(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400566:	68 04 00 00 00       	pushq  $0x4
  40056b:	e9 a0 ff ff ff       	jmpq   400510 <_init+0x28>

0000000000400570 <malloc@plt>:
  400570:	ff 25 ca 0a 20 00    	jmpq   *0x200aca(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400576:	68 05 00 00 00       	pushq  $0x5
  40057b:	e9 90 ff ff ff       	jmpq   400510 <_init+0x28>

0000000000400580 <__isoc99_scanf@plt>:
  400580:	ff 25 c2 0a 20 00    	jmpq   *0x200ac2(%rip)        # 601048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400586:	68 06 00 00 00       	pushq  $0x6
  40058b:	e9 80 ff ff ff       	jmpq   400510 <_init+0x28>

Disassembly of section .text:

0000000000400590 <_start>:
  400590:	31 ed                	xor    %ebp,%ebp
  400592:	49 89 d1             	mov    %rdx,%r9
  400595:	5e                   	pop    %rsi
  400596:	48 89 e2             	mov    %rsp,%rdx
  400599:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40059d:	50                   	push   %rax
  40059e:	54                   	push   %rsp
  40059f:	49 c7 c0 60 09 40 00 	mov    $0x400960,%r8
  4005a6:	48 c7 c1 d0 08 40 00 	mov    $0x4008d0,%rcx
  4005ad:	48 c7 c7 d4 07 40 00 	mov    $0x4007d4,%rdi
  4005b4:	e8 97 ff ff ff       	callq  400550 <__libc_start_main@plt>
  4005b9:	f4                   	hlt    
  4005ba:	66 90                	xchg   %ax,%ax
  4005bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005c0 <deregister_tm_clones>:
  4005c0:	b8 67 10 60 00       	mov    $0x601067,%eax
  4005c5:	55                   	push   %rbp
  4005c6:	48 2d 60 10 60 00    	sub    $0x601060,%rax
  4005cc:	48 83 f8 0e          	cmp    $0xe,%rax
  4005d0:	48 89 e5             	mov    %rsp,%rbp
  4005d3:	77 02                	ja     4005d7 <deregister_tm_clones+0x17>
  4005d5:	5d                   	pop    %rbp
  4005d6:	c3                   	retq   
  4005d7:	b8 00 00 00 00       	mov    $0x0,%eax
  4005dc:	48 85 c0             	test   %rax,%rax
  4005df:	74 f4                	je     4005d5 <deregister_tm_clones+0x15>
  4005e1:	5d                   	pop    %rbp
  4005e2:	bf 60 10 60 00       	mov    $0x601060,%edi
  4005e7:	ff e0                	jmpq   *%rax
  4005e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005f0 <register_tm_clones>:
  4005f0:	b8 60 10 60 00       	mov    $0x601060,%eax
  4005f5:	55                   	push   %rbp
  4005f6:	48 2d 60 10 60 00    	sub    $0x601060,%rax
  4005fc:	48 c1 f8 03          	sar    $0x3,%rax
  400600:	48 89 e5             	mov    %rsp,%rbp
  400603:	48 89 c2             	mov    %rax,%rdx
  400606:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40060a:	48 01 d0             	add    %rdx,%rax
  40060d:	48 89 c6             	mov    %rax,%rsi
  400610:	48 d1 fe             	sar    %rsi
  400613:	75 02                	jne    400617 <register_tm_clones+0x27>
  400615:	5d                   	pop    %rbp
  400616:	c3                   	retq   
  400617:	ba 00 00 00 00       	mov    $0x0,%edx
  40061c:	48 85 d2             	test   %rdx,%rdx
  40061f:	74 f4                	je     400615 <register_tm_clones+0x25>
  400621:	5d                   	pop    %rbp
  400622:	bf 60 10 60 00       	mov    $0x601060,%edi
  400627:	ff e2                	jmpq   *%rdx
  400629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400630 <__do_global_dtors_aux>:
  400630:	80 3d 29 0a 20 00 00 	cmpb   $0x0,0x200a29(%rip)        # 601060 <__TMC_END__>
  400637:	75 11                	jne    40064a <__do_global_dtors_aux+0x1a>
  400639:	55                   	push   %rbp
  40063a:	48 89 e5             	mov    %rsp,%rbp
  40063d:	e8 7e ff ff ff       	callq  4005c0 <deregister_tm_clones>
  400642:	5d                   	pop    %rbp
  400643:	c6 05 16 0a 20 00 01 	movb   $0x1,0x200a16(%rip)        # 601060 <__TMC_END__>
  40064a:	f3 c3                	repz retq 
  40064c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400650 <frame_dummy>:
  400650:	48 83 3d c8 07 20 00 	cmpq   $0x0,0x2007c8(%rip)        # 600e20 <__JCR_END__>
  400657:	00 
  400658:	74 1b                	je     400675 <frame_dummy+0x25>
  40065a:	b8 00 00 00 00       	mov    $0x0,%eax
  40065f:	48 85 c0             	test   %rax,%rax
  400662:	74 11                	je     400675 <frame_dummy+0x25>
  400664:	55                   	push   %rbp
  400665:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  40066a:	48 89 e5             	mov    %rsp,%rbp
  40066d:	ff d0                	callq  *%rax
  40066f:	5d                   	pop    %rbp
  400670:	e9 7b ff ff ff       	jmpq   4005f0 <register_tm_clones>
  400675:	e9 76 ff ff ff       	jmpq   4005f0 <register_tm_clones>
  40067a:	66 90                	xchg   %ax,%ax

000000000040067c <push>:
  40067c:	55                   	push   %rbp
  40067d:	48 89 e5             	mov    %rsp,%rbp
  400680:	48 83 ec 20          	sub    $0x20,%rsp
  400684:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400688:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40068b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40068f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400693:	bf 10 00 00 00       	mov    $0x10,%edi
  400698:	e8 d3 fe ff ff       	callq  400570 <malloc@plt>
  40069d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4006a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006a5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  4006ac:	00 
  4006ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006b1:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4006b4:	89 10                	mov    %edx,(%rax)
  4006b6:	eb 0c                	jmp    4006c4 <push+0x48>
  4006b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006bc:	48 8b 40 08          	mov    0x8(%rax),%rax
  4006c0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4006c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006c8:	48 8b 40 08          	mov    0x8(%rax),%rax
  4006cc:	48 85 c0             	test   %rax,%rax
  4006cf:	75 e7                	jne    4006b8 <push+0x3c>
  4006d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4006d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4006dd:	c9                   	leaveq 
  4006de:	c3                   	retq   

00000000004006df <detectLoop>:
  4006df:	55                   	push   %rbp
  4006e0:	48 89 e5             	mov    %rsp,%rbp
  4006e3:	48 83 ec 30          	sub    $0x30,%rsp
  4006e7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4006eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4006ef:	48 8b 40 08          	mov    0x8(%rax),%rax
  4006f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4006f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4006ff:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  400706:	eb 4b                	jmp    400753 <detectLoop+0x74>
  400708:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40070c:	48 8b 40 08          	mov    0x8(%rax),%rax
  400710:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400718:	48 8b 40 08          	mov    0x8(%rax),%rax
  40071c:	48 8b 40 08          	mov    0x8(%rax),%rax
  400720:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400724:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400728:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  40072c:	75 25                	jne    400753 <detectLoop+0x74>
  40072e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400732:	8b 10                	mov    (%rax),%edx
  400734:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400738:	48 89 c6             	mov    %rax,%rsi
  40073b:	bf 78 09 40 00       	mov    $0x400978,%edi
  400740:	b8 00 00 00 00       	mov    $0x0,%eax
  400745:	e8 f6 fd ff ff       	callq  400540 <printf@plt>
  40074a:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  400751:	eb 1b                	jmp    40076e <detectLoop+0x8f>
  400753:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  400758:	74 14                	je     40076e <detectLoop+0x8f>
  40075a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40075f:	74 0d                	je     40076e <detectLoop+0x8f>
  400761:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400765:	48 8b 40 08          	mov    0x8(%rax),%rax
  400769:	48 85 c0             	test   %rax,%rax
  40076c:	75 9a                	jne    400708 <detectLoop+0x29>
  40076e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  400772:	75 0a                	jne    40077e <detectLoop+0x9f>
  400774:	bf 9a 09 40 00       	mov    $0x40099a,%edi
  400779:	e8 b2 fd ff ff       	callq  400530 <puts@plt>
  40077e:	c9                   	leaveq 
  40077f:	c3                   	retq   

0000000000400780 <print>:
  400780:	55                   	push   %rbp
  400781:	48 89 e5             	mov    %rsp,%rbp
  400784:	48 83 ec 20          	sub    $0x20,%rsp
  400788:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40078c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400790:	48 8b 40 08          	mov    0x8(%rax),%rax
  400794:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400798:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  40079f:	eb 2a                	jmp    4007cb <print+0x4b>
  4007a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007a5:	8b 10                	mov    (%rax),%edx
  4007a7:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4007aa:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  4007ae:	89 c6                	mov    %eax,%esi
  4007b0:	bf a2 09 40 00       	mov    $0x4009a2,%edi
  4007b5:	b8 00 00 00 00       	mov    $0x0,%eax
  4007ba:	e8 81 fd ff ff       	callq  400540 <printf@plt>
  4007bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007c3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4007c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4007cb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4007d0:	75 cf                	jne    4007a1 <print+0x21>
  4007d2:	c9                   	leaveq 
  4007d3:	c3                   	retq   

00000000004007d4 <main>:
  4007d4:	55                   	push   %rbp
  4007d5:	48 89 e5             	mov    %rsp,%rbp
  4007d8:	48 83 ec 20          	sub    $0x20,%rsp
  4007dc:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  4007e3:	bf 10 00 00 00       	mov    $0x10,%edi
  4007e8:	e8 83 fd ff ff       	callq  400570 <malloc@plt>
  4007ed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4007f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007f5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  4007fc:	00 
  4007fd:	bf af 09 40 00       	mov    $0x4009af,%edi
  400802:	b8 00 00 00 00       	mov    $0x0,%eax
  400807:	e8 34 fd ff ff       	callq  400540 <printf@plt>
  40080c:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
  400810:	48 89 c6             	mov    %rax,%rsi
  400813:	bf c9 09 40 00       	mov    $0x4009c9,%edi
  400818:	b8 00 00 00 00       	mov    $0x0,%eax
  40081d:	e8 5e fd ff ff       	callq  400580 <__isoc99_scanf@plt>
  400822:	eb 3f                	jmp    400863 <main+0x8f>
  400824:	8b 45 f4             	mov    -0xc(%rbp),%eax
  400827:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  40082b:	89 c6                	mov    %eax,%esi
  40082d:	bf cc 09 40 00       	mov    $0x4009cc,%edi
  400832:	b8 00 00 00 00       	mov    $0x0,%eax
  400837:	e8 04 fd ff ff       	callq  400540 <printf@plt>
  40083c:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  400840:	48 89 c6             	mov    %rax,%rsi
  400843:	bf c9 09 40 00       	mov    $0x4009c9,%edi
  400848:	b8 00 00 00 00       	mov    $0x0,%eax
  40084d:	e8 2e fd ff ff       	callq  400580 <__isoc99_scanf@plt>
  400852:	8b 55 f0             	mov    -0x10(%rbp),%edx
  400855:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400859:	89 d6                	mov    %edx,%esi
  40085b:	48 89 c7             	mov    %rax,%rdi
  40085e:	e8 19 fe ff ff       	callq  40067c <push>
  400863:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400866:	85 c0                	test   %eax,%eax
  400868:	0f 95 c2             	setne  %dl
  40086b:	83 e8 01             	sub    $0x1,%eax
  40086e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  400871:	84 d2                	test   %dl,%dl
  400873:	75 af                	jne    400824 <main+0x50>
  400875:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400879:	48 89 c7             	mov    %rax,%rdi
  40087c:	e8 ff fe ff ff       	callq  400780 <print>
  400881:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400885:	48 89 c7             	mov    %rax,%rdi
  400888:	e8 52 fe ff ff       	callq  4006df <detectLoop>
  40088d:	bf 0a 00 00 00       	mov    $0xa,%edi
  400892:	e8 89 fc ff ff       	callq  400520 <putchar@plt>
  400897:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40089b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40089f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4008a3:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  4008a7:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4008ab:	bf 0a 00 00 00       	mov    $0xa,%edi
  4008b0:	e8 6b fc ff ff       	callq  400520 <putchar@plt>
  4008b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4008b9:	48 89 c7             	mov    %rax,%rdi
  4008bc:	e8 1e fe ff ff       	callq  4006df <detectLoop>
  4008c1:	b8 00 00 00 00       	mov    $0x0,%eax
  4008c6:	c9                   	leaveq 
  4008c7:	c3                   	retq   
  4008c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4008cf:	00 

00000000004008d0 <__libc_csu_init>:
  4008d0:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  4008d5:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  4008da:	48 8d 2d 37 05 20 00 	lea    0x200537(%rip),%rbp        # 600e18 <__init_array_end>
  4008e1:	4c 8d 25 28 05 20 00 	lea    0x200528(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4008e8:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  4008ed:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  4008f2:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  4008f7:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  4008fc:	48 83 ec 38          	sub    $0x38,%rsp
  400900:	4c 29 e5             	sub    %r12,%rbp
  400903:	41 89 ff             	mov    %edi,%r15d
  400906:	49 89 f6             	mov    %rsi,%r14
  400909:	48 c1 fd 03          	sar    $0x3,%rbp
  40090d:	49 89 d5             	mov    %rdx,%r13
  400910:	31 db                	xor    %ebx,%ebx
  400912:	e8 d1 fb ff ff       	callq  4004e8 <_init>
  400917:	48 85 ed             	test   %rbp,%rbp
  40091a:	74 1a                	je     400936 <__libc_csu_init+0x66>
  40091c:	0f 1f 40 00          	nopl   0x0(%rax)
  400920:	4c 89 ea             	mov    %r13,%rdx
  400923:	4c 89 f6             	mov    %r14,%rsi
  400926:	44 89 ff             	mov    %r15d,%edi
  400929:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40092d:	48 83 c3 01          	add    $0x1,%rbx
  400931:	48 39 eb             	cmp    %rbp,%rbx
  400934:	75 ea                	jne    400920 <__libc_csu_init+0x50>
  400936:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40093b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400940:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400945:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  40094a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  40094f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400954:	48 83 c4 38          	add    $0x38,%rsp
  400958:	c3                   	retq   
  400959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400960 <__libc_csu_fini>:
  400960:	f3 c3                	repz retq 
  400962:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

0000000000400964 <_fini>:
  400964:	48 83 ec 08          	sub    $0x8,%rsp
  400968:	48 83 c4 08          	add    $0x8,%rsp
  40096c:	c3                   	retq   
